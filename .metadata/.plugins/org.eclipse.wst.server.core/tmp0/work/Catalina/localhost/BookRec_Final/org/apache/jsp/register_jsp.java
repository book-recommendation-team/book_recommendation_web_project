/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2025-07-08 07:22:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.User;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/css/main_css.jsp", Long.valueOf(1751947096000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write(' ');
      out.write('\n');

    // [추가] 페이지에서 사용할 변수들을 선언합니다.
    User loggedInUser = (User) session.getAttribute("loggedInUser");
    String contextPath = request.getContextPath();

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>회원가입 - 책 추천 웹사이트</title>\n");
      out.write("    ");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<style>\n");
      out.write("  /* 기본 스타일 (기존 유지) */\n");
      out.write("body {\n");
      out.write("    font-family: 'Arial', sans-serif;\n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("    background-color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: space-between;\n");
      out.write("    align-items: center;\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo img {\n");
      out.write("    width: 200px;\n");
      out.write("    height: auto;\n");
      out.write("    margin-left: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo a img {\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".search-form { /* CSS 클래스 이름 수정 */\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  gap: 10px;\n");
      out.write("  margin: 10px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-box {\n");
      out.write("  padding: 10px;\n");
      out.write("  width: 400px;\n");
      out.write("  font-size: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-btn {\n");
      out.write("  padding: 10px 16px;\n");
      out.write("  background-color: #446b3c;\n");
      out.write("  color: white;\n");
      out.write("  border: none;\n");
      out.write("  font-size: 16px;\n");
      out.write("  border-radius: 4px;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("#search-btn:hover {\n");
      out.write("    background-color: #cce0b8;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* ======================================================== */\n");
      out.write("/* [수정된 부분 시작] 기존 버튼 스타일을 아래 코드로 대체합니다. */\n");
      out.write("/* ======================================================== */\n");
      out.write("\n");
      out.write("/* 회원가입, 로그인 등 기본 버튼 스타일 */\n");
      out.write("#user-buttons button {\n");
      out.write("    display: inline-block;\n");
      out.write("    width: 110px;\n");
      out.write("    height: 42px;\n");
      out.write("    line-height: 42px;\n");
      out.write("    text-align: center;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    \n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border: 1px solid #c0dab0;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("    font-weight: bold;\n");
      out.write("    font-size: 14px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    transition: background-color 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 마이페이지, 로그아웃 링크를 버튼처럼 보이게 하는 스타일 */\n");
      out.write(".header-action-btn {\n");
      out.write("    display: inline-block;\n");
      out.write("    width: 110px;\n");
      out.write("    height: 42px;\n");
      out.write("    line-height: 42px;\n");
      out.write("    text-align: center;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    \n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border: 1px solid #c0dab0;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("    font-weight: bold;\n");
      out.write("    font-size: 14px;\n");
      out.write("    text-decoration: none; /* a 태그 밑줄 제거 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    transition: background-color 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 모든 버튼에 동일한 hover 효과 적용 */\n");
      out.write("#user-buttons button:hover,\n");
      out.write(".header-action-btn:hover {\n");
      out.write("    background-color: #d0e6c5;\n");
      out.write("    border-color: #a9c7a7;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 환영 메시지 텍스트 세로 정렬 */\n");
      out.write(".welcome-message {\n");
      out.write("    vertical-align: middle;\n");
      out.write("    margin-right: 10px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #446b3c;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* ======================================================== */\n");
      out.write("/* [수정된 부분 끝]                                        */\n");
      out.write("/* ======================================================== */\n");
      out.write("\n");
      out.write("nav {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 15px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 40px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#user-buttons {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center; /* 버튼과 텍스트 세로 정렬을 위해 추가 */\n");
      out.write("    gap: 10px;\n");
      out.write("    margin-right: 150px;\n");
      out.write("} \n");
      out.write(".banner {\n");
      out.write("    position: relative;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 650px;\n");
      out.write("    overflow: hidden;\n");
      out.write("      background-color: transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner img {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 0;\n");
      out.write("    left: 0;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 100%;\n");
      out.write("    object-fit: cover;\n");
      out.write("    object-position: center center;\n");
      out.write("    z-index: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls {\n");
      out.write("    position: absolute;\n");
      out.write("    bottom: 10px;\n");
      out.write("    right: 10px;\n");
      out.write("    z-index: 3;\n");
      out.write("    display: flex;\n");
      out.write("    gap: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button {\n");
      out.write("    background-color: rgba(255, 193, 7, 0.9);\n");
      out.write("    border: none;\n");
      out.write("    padding: 6px 8px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    color: #000;\n");
      out.write("    transition: background-color 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button:hover {\n");
      out.write("    background-color: rgba(255, 160, 0, 0.95);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 34px;\n");
      out.write("    padding: 18px 0;\n");
      out.write("     width: 100%;        /* ✅ 추가 */\n");
      out.write("    margin: 8px 0;      /* ✅ 가운데 정렬 제거 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 20px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main_list {\n");
      out.write("    padding: 20px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" .tag-list {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 12px;\n");
      out.write("    margin: 20px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button {\n");
      out.write("    background-color: #e6f0d7; /* 기본 연그린 */\n");
      out.write("    border: 1px solid transparent;\n");
      out.write("    padding: 8px 16px;\n");
      out.write("    border-radius: 20px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    color: #446b3c; /* 그린 계열 텍스트 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    font-weight: 600;\n");
      out.write("    transition: background-color 0.3s, color 0.3s, border 0.3s;\n");
      out.write("    outline: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:hover {\n");
      out.write("    background-color: #d0e6c5;             /* hover 시 약간 더 진한 그린 */\n");
      out.write("    color: #2e4f25;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button.active {\n");
      out.write("    background-color: #c0dab0;             /* 클릭됐을 때 조금 더 강조 */\n");
      out.write("    border: 1px solid #8cb78a;             /* 테두리도 자연스러운 초록 */\n");
      out.write("    color: #2e4f25;                        /* 글자도 어울리는 진한 그린 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:focus {\n");
      out.write("    outline: none;\n");
      out.write("    box-shadow: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 책 슬라이더 스타일 */\n");
      out.write(".book-carousel {\n");
      out.write("    position: relative;\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto 40px auto;\n");
      out.write("    overflow: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-window {\n");
      out.write("    width: 1000px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-track {\n");
      out.write("    display: flex;\n");
      out.write("    transition: transform 0.5s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 이전/다음 버튼 - 위치 고정, 색상 조정 */\n");
      out.write(".carousel-btn {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 50%;\n");
      out.write("    transform: translateY(-50%);\n");
      out.write("    font-size: 26px;\n");
      out.write("    background-color: #f3f8ef;\n");
      out.write("    border: none;\n");
      out.write("    color: #444;\n");
      out.write("    cursor: pointer;\n");
      out.write("    padding: 8px 12px;\n");
      out.write("    border-radius: 50%;\n");
      out.write("    z-index: 2;\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    justify-content: center;\n");
      out.write("    transition: background-color 0.3s, color 0.3s;\n");
      out.write("    user-select: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn:hover {\n");
      out.write("    background-color: #c8dfb5;\n");
      out.write("    color: #000;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.prev {\n");
      out.write("    left: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.next {\n");
      out.write("    right: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item {\n");
      out.write("    flex: 0 0 25%;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 10px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item img {\n");
      out.write("    width: 180px;\n");
      out.write("    height: 260px;\n");
      out.write("    object-fit: cover;\n");
      out.write("    border-radius: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-info {\n");
      out.write("    margin-top: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-title {\n");
      out.write("    font-size: 14px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    margin-top: 10px;\n");
      out.write("    color: #444;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-author {\n");
      out.write("    font-size: 12px;\n");
      out.write("    color: #666;\n");
      out.write("}\n");
      out.write("\n");
      out.write("footer {\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    color: #333;\n");
      out.write("    padding: 20px 0;\n");
      out.write("    text-align: center;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-top: 1px solid #ccc;\n");
      out.write("    margin-top: 60px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-container {\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a {\n");
      out.write("    color: #333;\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" /* 이전/다음 버튼 스타일 */\n");
      out.write("#carousel-prev-btn, #carousel-next-btn {\n");
      out.write("    font-size: 18px;\n");
      out.write("    padding: 5px 12px;\n");
      out.write("    margin: 10px 5px 20px 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    border: 1px solid #446b3c;\n");
      out.write("    background: white;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border-radius: 4px;\n");
      out.write("}\n");
      out.write("#carousel-prev-btn:hover, #carousel-next-btn:hover {\n");
      out.write("    background-color: #446b3c;\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write("#scrollToTopBtn {\n");
      out.write("  position: fixed;\n");
      out.write("  bottom: 150px;\n");
      out.write("  right: 40px;\n");
      out.write("  width: 66px; /* 이미지와 딱 맞게 약간 키움 */\n");
      out.write("  height: 66px;\n");
      out.write("  background-color: transparent;\n");
      out.write("  border: none;\n");
      out.write("  border-radius: 0;\n");
      out.write("  transform: rotate(45deg);\n");
      out.write("  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* 그림자 더 작고 약하게 */\n");
      out.write("  cursor: pointer;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  z-index: 999;\n");
      out.write("  transition: all 0.3s ease;\n");
      out.write("  backdrop-filter: blur(10px);\n");
      out.write("  padding: 0;\n");
      out.write("  margin-top: 0px; /* margin-top 제거 또는 0으로 */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn img {\n");
      out.write("  width: 100%;\n");
      out.write("  height: 100%;\n");
      out.write("  object-fit: contain;\n");
      out.write("  transform: rotate(-45deg);\n");
      out.write("  display: block;\n");
      out.write("  transition: transform 0.3s ease;\n");
      out.write("  position: relative;\n");
      out.write("  top: 0;\n");
      out.write("  left: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn:hover {\n");
      out.write("  transform: rotate(45deg) translateY(2px); /* 움직임도 줄임 */\n");
      out.write("  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2); /* 호버시 그림자도 작게 */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn:hover img {\n");
      out.write("  transform: scale(1.05) rotate(-45deg);\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("    <link rel=\"icon\" href=\"img/icon2.png\" type=\"image/x-icon\">\n");
      out.write("\n");
      out.write("    <style>\n");
      out.write("        /* login.jsp와 register.jsp에 공통으로 적용될 스타일 */\n");
      out.write("        body {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: center;\n");
      out.write("            align-items: center;\n");
      out.write("            min-height: 100vh;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            background-color: #f8fcf7; /* 약간 더 밝은 배경색 */\n");
      out.write("            flex-direction: column; /* 로고와 컨테이너를 세로로 정렬 */\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .auth-logo-container { /* 새로 추가된 로고 컨테이너 스타일 */\n");
      out.write("            margin-bottom: 30px; /* 폼과의 간격 */\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .auth-logo-container img {\n");
      out.write("            width: 200px; /* 로고 크기 */\n");
      out.write("            height: auto;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .login-container, .register-container {\n");
      out.write("            background-color: #eff7e8;\n");
      out.write("            padding: 40px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n");
      out.write("            width: 450px;\n");
      out.write("            max-width: 90%;\n");
      out.write("            text-align: center;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .login-container h2, .register-container h2 {\n");
      out.write("            color: #446b3c;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("            font-size: 28px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .input-group {\n");
      out.write("            margin-bottom: 18px;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .input-group label {\n");
      out.write("            display: block;\n");
      out.write("            margin-bottom: 8px;\n");
      out.write("            color: #666;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .input-group input[type=\"text\"],\n");
      out.write("        .input-group input[type=\"password\"],\n");
      out.write("        .input-group input[type=\"email\"],\n");
      out.write("        .input-group select {\n");
      out.write("            width: calc(100% - 20px);\n");
      out.write("            padding: 12px 10px;\n");
      out.write("            border: 1px solid #ccc;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            font-size: 16px;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("            background-color: #fff;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        /* 성별 라디오 버튼 스타일 */\n");
      out.write("        .input-group.gender-group {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: flex-start;\n");
      out.write("            gap: 15px;\n");
      out.write("        }\n");
      out.write("        .input-group.gender-group label {\n");
      out.write("            display: inline-block;\n");
      out.write("            margin-right: 5px;\n");
      out.write("            margin-bottom: 0;\n");
      out.write("        }\n");
      out.write("        .input-group.gender-group input[type=\"radio\"] {\n");
      out.write("            width: auto;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* 취미/관심사 체크박스 그룹 스타일 */\n");
      out.write("        .checkbox-group {\n");
      out.write("            display: flex;\n");
      out.write("            flex-wrap: wrap;\n");
      out.write("            gap: 10px;\n");
      out.write("            margin-top: 5px;\n");
      out.write("        }\n");
      out.write("        .checkbox-group label {\n");
      out.write("            display: inline-flex; /* 체크박스와 레이블을 한 줄에 정렬 */\n");
      out.write("            align-items: center;\n");
      out.write("            margin-right: 15px; /* 각 체크박스 사이 간격 */\n");
      out.write("            font-weight: normal; /* 기본 레이블과 다르게 설정 */\n");
      out.write("            color: #555;\n");
      out.write("            margin-bottom: 0; /* input-group 내부 label 기본 margin-bottom 제거 */\n");
      out.write("        }\n");
      out.write("        .checkbox-group input[type=\"checkbox\"] {\n");
      out.write("            margin-right: 5px;\n");
      out.write("            width: auto; /* 체크박스 본연의 크기 유지 */\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("        .btn-login, .btn-register {\n");
      out.write("            background-color: #446b3c;\n");
      out.write("            color: #fff;\n");
      out.write("            border: none;\n");
      out.write("            padding: 15px 25px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            font-size: 18px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            cursor: pointer;\n");
      out.write("            width: 100%;\n");
      out.write("            transition: background-color 0.3s, color 0.3s;\n");
      out.write("            margin-top: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-login:hover, .btn-register:hover {\n");
      out.write("            background-color: #2e4f25;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .links-group {\n");
      out.write("            margin-top: 25px;\n");
      out.write("            font-size: 14px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .links-group a {\n");
      out.write("            color: #446b3c;\n");
      out.write("            text-decoration: none;\n");
      out.write("            margin: 0 10px;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .links-group a:hover {\n");
      out.write("            text-decoration: underline;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #error-message {\n");
      out.write("            color: #d9534f;\n");
      out.write("            margin-top: 15px;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"auth-logo-container\">\n");
      out.write("        <a href=\"main.jsp\">\n");
      out.write("            <img src=\"img/logo.png\" alt=\"WITHUS 로고\">\n");
      out.write("        </a>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"register-container\">\n");
      out.write("        <h2>회원가입</h2>\n");
      out.write("        <form id=\"registerForm\">\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"username\">사용자 이름 (아이디)</label>\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" required>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"password\">비밀번호</label>\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" required>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"nickname\">닉네임</label>\n");
      out.write("                <input type=\"text\" id=\"nickname\" name=\"nickname\" required>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"email\">이메일</label>\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" required>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"name\">이름</label> ");
      out.write("\n");
      out.write("                <input type=\"text\" id=\"name\" name=\"name\" required>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"gender\">성별</label>\n");
      out.write("                <select id=\"gender\" name=\"gender\" required> ");
      out.write("\n");
      out.write("                    <option value=\"\">선택</option> ");
      out.write("\n");
      out.write("                    <option value=\"M\">남성</option>\n");
      out.write("                    <option value=\"F\">여성</option>\n");
      out.write("                    <option value=\"O\">선택 안 함</option>\n");
      out.write("                </select>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label for=\"mbti\">MBTI</label> ");
      out.write("\n");
      out.write("                <select id=\"mbti\" name=\"mbti\" required> ");
      out.write("\n");
      out.write("                    <option value=\"\">선택</option>\n");
      out.write("                    <option value=\"ISTJ\">ISTJ</option>\n");
      out.write("                    <option value=\"ISFJ\">ISFJ</option>\n");
      out.write("                    <option value=\"INFJ\">INFJ</option>\n");
      out.write("                    <option value=\"INTJ\">INTJ</option>\n");
      out.write("                    <option value=\"ISTP\">ISTP</option>\n");
      out.write("                    <option value=\"ISFP\">ISFP</option>\n");
      out.write("                    <option value=\"INFP\">INFP</option>\n");
      out.write("                    <option value=\"INTP\">INTP</option>\n");
      out.write("                    <option value=\"ESTP\">ESTP</option>\n");
      out.write("                    <option value=\"ESFP\">ESFP</option>\n");
      out.write("                    <option value=\"ENFP\">ENFP</option>\n");
      out.write("                    <option value=\"ENTP\">ENTP</option>\n");
      out.write("                    <option value=\"ESTJ\">ESTJ</option>\n");
      out.write("                    <option value=\"ESFJ\">ESFJ</option>\n");
      out.write("                    <option value=\"ENFJ\">ENFJ</option>\n");
      out.write("                    <option value=\"ENTJ\">ENTJ</option>\n");
      out.write("                </select>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"input-group\">\n");
      out.write("                <label>취미/관심사</label> ");
      out.write("\n");
      out.write("                <div class=\"checkbox-group\">\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"reading\"> 독서</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"movie\"> 영화</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"music\"> 음악</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"sports\"> 운동</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"travel\"> 여행</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"gaming\"> 게임</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"cooking\"> 요리</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"art\"> 미술</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"science\"> 과학</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"coding\"> 코딩</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"fashion\"> 패션</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"photography\"> 사진</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"technology\"> IT/기술</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"history\"> 역사</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"writing\"> 글쓰기</label>\n");
      out.write("                    <label><input type=\"checkbox\" name=\"hobbies\" value=\"education\"> 교육</label>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <button type=\"submit\" class=\"btn-register\">회원가입</button>\n");
      out.write("        </form>\n");
      out.write("        <div id=\"error-message\"></div>\n");
      out.write("\n");
      out.write("        <div class=\"links-group\">\n");
      out.write("            <a href=\"login.jsp\">로그인 페이지로</a>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        document.getElementById('registerForm').addEventListener('submit', async function(event) {\n");
      out.write("            event.preventDefault();\n");
      out.write("\n");
      out.write("            const username = document.getElementById('username').value;\n");
      out.write("            const password = document.getElementById('password').value;\n");
      out.write("            const nickname = document.getElementById('nickname').value;\n");
      out.write("            const email = document.getElementById('email').value;\n");
      out.write("            const name = document.getElementById('name').value; // ✨ 이름 값 가져오기\n");
      out.write("            const gender = document.getElementById('gender').value;\n");
      out.write("            const mbti = document.getElementById('mbti').value;\n");
      out.write("            \n");
      out.write("            // ✨ 선택된 취미/관심사 값들을 콤마로 구분된 문자열로 만듭니다.\n");
      out.write("            const selectedHobbies = Array.from(document.querySelectorAll('input[name=\"hobbies\"]:checked'))\n");
      out.write("                                         .map(checkbox => checkbox.value)\n");
      out.write("                                         .join(',');\n");
      out.write("\n");
      out.write("            const errorMessageDiv = document.getElementById('error-message');\n");
      out.write("            errorMessageDiv.textContent = '';\n");
      out.write("\n");
      out.write("            // 클라이언트 측 유효성 검사 (필수 항목 확인)\n");
      out.write("            if (!username || !password || !nickname || !email || !name || !gender || !mbti || !selectedHobbies) {\n");
      out.write("                errorMessageDiv.textContent = '모든 필수 정보를 입력해주세요.';\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            // 비밀번호 복잡성 검사 추가 (예시)\n");
      out.write("            if (password.length < 8 || !/[!@#$%^&*()]/.test(password)) {\n");
      out.write("                errorMessageDiv.textContent = '비밀번호는 최소 8자 이상이며 특수문자를 포함해야 합니다.';\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            try {\n");
      out.write("                // api/users는 회원가입을 처리하는 서블릿의 URL 매핑이라고 가정합니다.\n");
      out.write("                // 예: @WebServlet(\"/api/users\")\n");
      out.write("                const response = await fetch('api/users', { \n");
      out.write("                    method: 'POST',\n");
      out.write("                    headers: {\n");
      out.write("                        'Content-Type': 'application/json'\n");
      out.write("                    },\n");
      out.write("                    body: JSON.stringify({\n");
      out.write("                        username: username,\n");
      out.write("                        password: password,\n");
      out.write("                        nickname: nickname,\n");
      out.write("                        email: email,\n");
      out.write("                        gender: gender,\n");
      out.write("                        mbti: mbti,\n");
      out.write("                        name: name,          // ✨ 이름 데이터 전송\n");
      out.write("                        hobbies: selectedHobbies // ✨ 취미/관심사 데이터 전송\n");
      out.write("                    })\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                const apiResponse = await response.json();\n");
      out.write("\n");
      out.write("                if (apiResponse.success) { // apiResponse.status 대신 success 사용 (일반적인 JSON 응답 형식)\n");
      out.write("                    alert(apiResponse.message + '\\n이제 로그인해주세요!');\n");
      out.write("                    window.location.href = 'login.jsp';\n");
      out.write("                } else {\n");
      out.write("                    errorMessageDiv.textContent = apiResponse.message || '회원가입에 실패했습니다.';\n");
      out.write("                }\n");
      out.write("            } catch (error) {\n");
      out.write("                console.error('회원가입 요청 중 오류 발생:', error);\n");
      out.write("                errorMessageDiv.textContent = '서버와 통신 중 오류가 발생했습니다.';\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
