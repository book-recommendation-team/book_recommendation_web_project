/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2025-07-08 08:44:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.User;
import model.User;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/./css/main_css.jsp", Long.valueOf(1751947096000L));
    _jspx_dependants.put("/css/main_css.jsp", Long.valueOf(1751947096000L));
    _jspx_dependants.put("/./main_footer.jsp", Long.valueOf(1751616556000L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1751950996000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

// 페이지 맨 위에서 변수 선언
User loggedInUser = (User) session.getAttribute("loggedInUser");
String contextPath = request.getContextPath();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>WITHUS</title>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<style>\n");
      out.write("  /* 기본 스타일 (기존 유지) */\n");
      out.write("body {\n");
      out.write("    font-family: 'Arial', sans-serif;\n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("    background-color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: space-between;\n");
      out.write("    align-items: center;\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo img {\n");
      out.write("    width: 200px;\n");
      out.write("    height: auto;\n");
      out.write("    margin-left: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo a img {\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".search-form { /* CSS 클래스 이름 수정 */\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  gap: 10px;\n");
      out.write("  margin: 10px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-box {\n");
      out.write("  padding: 10px;\n");
      out.write("  width: 400px;\n");
      out.write("  font-size: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-btn {\n");
      out.write("  padding: 10px 16px;\n");
      out.write("  background-color: #446b3c;\n");
      out.write("  color: white;\n");
      out.write("  border: none;\n");
      out.write("  font-size: 16px;\n");
      out.write("  border-radius: 4px;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("#search-btn:hover {\n");
      out.write("    background-color: #cce0b8;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* ======================================================== */\n");
      out.write("/* [수정된 부분 시작] 기존 버튼 스타일을 아래 코드로 대체합니다. */\n");
      out.write("/* ======================================================== */\n");
      out.write("\n");
      out.write("/* 회원가입, 로그인 등 기본 버튼 스타일 */\n");
      out.write("#user-buttons button {\n");
      out.write("    display: inline-block;\n");
      out.write("    width: 110px;\n");
      out.write("    height: 42px;\n");
      out.write("    line-height: 42px;\n");
      out.write("    text-align: center;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    \n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border: 1px solid #c0dab0;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("    font-weight: bold;\n");
      out.write("    font-size: 14px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    transition: background-color 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 마이페이지, 로그아웃 링크를 버튼처럼 보이게 하는 스타일 */\n");
      out.write(".header-action-btn {\n");
      out.write("    display: inline-block;\n");
      out.write("    width: 110px;\n");
      out.write("    height: 42px;\n");
      out.write("    line-height: 42px;\n");
      out.write("    text-align: center;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    \n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border: 1px solid #c0dab0;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("    font-weight: bold;\n");
      out.write("    font-size: 14px;\n");
      out.write("    text-decoration: none; /* a 태그 밑줄 제거 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    transition: background-color 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 모든 버튼에 동일한 hover 효과 적용 */\n");
      out.write("#user-buttons button:hover,\n");
      out.write(".header-action-btn:hover {\n");
      out.write("    background-color: #d0e6c5;\n");
      out.write("    border-color: #a9c7a7;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 환영 메시지 텍스트 세로 정렬 */\n");
      out.write(".welcome-message {\n");
      out.write("    vertical-align: middle;\n");
      out.write("    margin-right: 10px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #446b3c;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* ======================================================== */\n");
      out.write("/* [수정된 부분 끝]                                        */\n");
      out.write("/* ======================================================== */\n");
      out.write("\n");
      out.write("nav {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 15px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 40px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#user-buttons {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center; /* 버튼과 텍스트 세로 정렬을 위해 추가 */\n");
      out.write("    gap: 10px;\n");
      out.write("    margin-right: 150px;\n");
      out.write("} \n");
      out.write(".banner {\n");
      out.write("    position: relative;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 650px;\n");
      out.write("    overflow: hidden;\n");
      out.write("      background-color: transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner img {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 0;\n");
      out.write("    left: 0;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 100%;\n");
      out.write("    object-fit: cover;\n");
      out.write("    object-position: center center;\n");
      out.write("    z-index: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls {\n");
      out.write("    position: absolute;\n");
      out.write("    bottom: 10px;\n");
      out.write("    right: 10px;\n");
      out.write("    z-index: 3;\n");
      out.write("    display: flex;\n");
      out.write("    gap: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button {\n");
      out.write("    background-color: rgba(255, 193, 7, 0.9);\n");
      out.write("    border: none;\n");
      out.write("    padding: 6px 8px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    color: #000;\n");
      out.write("    transition: background-color 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button:hover {\n");
      out.write("    background-color: rgba(255, 160, 0, 0.95);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 34px;\n");
      out.write("    padding: 18px 0;\n");
      out.write("     width: 100%;        /* ✅ 추가 */\n");
      out.write("    margin: 8px 0;      /* ✅ 가운데 정렬 제거 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 20px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main_list {\n");
      out.write("    padding: 20px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" .tag-list {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 12px;\n");
      out.write("    margin: 20px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button {\n");
      out.write("    background-color: #e6f0d7; /* 기본 연그린 */\n");
      out.write("    border: 1px solid transparent;\n");
      out.write("    padding: 8px 16px;\n");
      out.write("    border-radius: 20px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    color: #446b3c; /* 그린 계열 텍스트 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    font-weight: 600;\n");
      out.write("    transition: background-color 0.3s, color 0.3s, border 0.3s;\n");
      out.write("    outline: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:hover {\n");
      out.write("    background-color: #d0e6c5;             /* hover 시 약간 더 진한 그린 */\n");
      out.write("    color: #2e4f25;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button.active {\n");
      out.write("    background-color: #c0dab0;             /* 클릭됐을 때 조금 더 강조 */\n");
      out.write("    border: 1px solid #8cb78a;             /* 테두리도 자연스러운 초록 */\n");
      out.write("    color: #2e4f25;                        /* 글자도 어울리는 진한 그린 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:focus {\n");
      out.write("    outline: none;\n");
      out.write("    box-shadow: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 책 슬라이더 스타일 */\n");
      out.write(".book-carousel {\n");
      out.write("    position: relative;\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto 40px auto;\n");
      out.write("    overflow: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-window {\n");
      out.write("    width: 1000px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-track {\n");
      out.write("    display: flex;\n");
      out.write("    transition: transform 0.5s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 이전/다음 버튼 - 위치 고정, 색상 조정 */\n");
      out.write(".carousel-btn {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 50%;\n");
      out.write("    transform: translateY(-50%);\n");
      out.write("    font-size: 26px;\n");
      out.write("    background-color: #f3f8ef;\n");
      out.write("    border: none;\n");
      out.write("    color: #444;\n");
      out.write("    cursor: pointer;\n");
      out.write("    padding: 8px 12px;\n");
      out.write("    border-radius: 50%;\n");
      out.write("    z-index: 2;\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    justify-content: center;\n");
      out.write("    transition: background-color 0.3s, color 0.3s;\n");
      out.write("    user-select: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn:hover {\n");
      out.write("    background-color: #c8dfb5;\n");
      out.write("    color: #000;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.prev {\n");
      out.write("    left: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.next {\n");
      out.write("    right: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item {\n");
      out.write("    flex: 0 0 25%;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 10px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item img {\n");
      out.write("    width: 180px;\n");
      out.write("    height: 260px;\n");
      out.write("    object-fit: cover;\n");
      out.write("    border-radius: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-info {\n");
      out.write("    margin-top: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-title {\n");
      out.write("    font-size: 14px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    margin-top: 10px;\n");
      out.write("    color: #444;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-author {\n");
      out.write("    font-size: 12px;\n");
      out.write("    color: #666;\n");
      out.write("}\n");
      out.write("\n");
      out.write("footer {\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    color: #333;\n");
      out.write("    padding: 20px 0;\n");
      out.write("    text-align: center;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-top: 1px solid #ccc;\n");
      out.write("    margin-top: 60px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-container {\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a {\n");
      out.write("    color: #333;\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" /* 이전/다음 버튼 스타일 */\n");
      out.write("#carousel-prev-btn, #carousel-next-btn {\n");
      out.write("    font-size: 18px;\n");
      out.write("    padding: 5px 12px;\n");
      out.write("    margin: 10px 5px 20px 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    border: 1px solid #446b3c;\n");
      out.write("    background: white;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border-radius: 4px;\n");
      out.write("}\n");
      out.write("#carousel-prev-btn:hover, #carousel-next-btn:hover {\n");
      out.write("    background-color: #446b3c;\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write("#scrollToTopBtn {\n");
      out.write("  position: fixed;\n");
      out.write("  bottom: 150px;\n");
      out.write("  right: 40px;\n");
      out.write("  width: 66px; /* 이미지와 딱 맞게 약간 키움 */\n");
      out.write("  height: 66px;\n");
      out.write("  background-color: transparent;\n");
      out.write("  border: none;\n");
      out.write("  border-radius: 0;\n");
      out.write("  transform: rotate(45deg);\n");
      out.write("  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* 그림자 더 작고 약하게 */\n");
      out.write("  cursor: pointer;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  z-index: 999;\n");
      out.write("  transition: all 0.3s ease;\n");
      out.write("  backdrop-filter: blur(10px);\n");
      out.write("  padding: 0;\n");
      out.write("  margin-top: 0px; /* margin-top 제거 또는 0으로 */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn img {\n");
      out.write("  width: 100%;\n");
      out.write("  height: 100%;\n");
      out.write("  object-fit: contain;\n");
      out.write("  transform: rotate(-45deg);\n");
      out.write("  display: block;\n");
      out.write("  transition: transform 0.3s ease;\n");
      out.write("  position: relative;\n");
      out.write("  top: 0;\n");
      out.write("  left: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn:hover {\n");
      out.write("  transform: rotate(45deg) translateY(2px); /* 움직임도 줄임 */\n");
      out.write("  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2); /* 호버시 그림자도 작게 */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn:hover img {\n");
      out.write("  transform: scale(1.05) rotate(-45deg);\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"icon\" href=\"img/icon2.png\" type=\"image/x-icon\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("    <div id=\"logo\">\r\n");
      out.write("        <a href=\"");
      out.print( request.getContextPath() );
      out.write("/main.jsp\">\r\n");
      out.write("            <img src=\"");
      out.print( request.getContextPath() );
      out.write("/img/logo.png\" alt=\"로고\">\r\n");
      out.write("        </a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"search-form\">\r\n");
      out.write("        <input type=\"text\" id=\"search-box\" placeholder=\"검색어를 입력하세요...\" class=\"search-input\" />\r\n");
      out.write("        <button type=\"button\" id=\"search-btn\" class=\"search-button\">검색</button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"user-buttons\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");
 if (session.getAttribute("loggedInUser") == null) { 
      out.write("\r\n");
      out.write("            <button id=\"join-btn\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/register.jsp'\">회원가입</button>\r\n");
      out.write("            <button id=\"login-btn\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/login.jsp'\">로그인</button>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            ");
 User tempUser = (User) session.getAttribute("loggedInUser"); 
      out.write("\r\n");
      out.write("            <span class=\"welcome-message\">환영합니다, ");
      out.print( tempUser.getNickname() );
      out.write("님!</span>\r\n");
      out.write("            <a href=\"");
      out.print( request.getContextPath() );
      out.write("/mypage.jsp\" class=\"header-action-btn\">마이페이지</a>\r\n");
      out.write("            <a href=\"");
      out.print( request.getContextPath() );
      out.write("/doLogout\" class=\"header-action-btn\" onclick=\"return confirm('정말 로그아웃 하시겠습니까?');\">로그아웃</a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<nav>\r\n");
      out.write("		<a href=\"");
      out.print(contextPath);
      out.write("/aiRecommend.jsp\">(AI) 책 추천</a> <a\r\n");
      out.write("			href=\"");
      out.print(contextPath);
      out.write("/reviewList.jsp\">리뷰</a> <a\r\n");
      out.write("			href=\"");
      out.print(contextPath);
      out.write("/playlistmain.jsp\">플레이리스트</a> <a\r\n");
      out.write("			href=\"");
      out.print(contextPath);
      out.write("/celebList.jsp\">셀럽추천</a> <a\r\n");
      out.write("			href=\"");
      out.print(contextPath);
      out.write("/mypage.jsp\">마이페이지</a>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<div id=\"main-content-area\">\r\n");
      out.write("		<div class=\"banner\">\r\n");
      out.write("			<a id=\"banner-link\"\r\n");
      out.write("				href=\"https://product.kyobobook.co.kr/detail/S000215578377\"\r\n");
      out.write("				target=\"_blank\"> <img id=\"banner-image\" src=\"img/b1.jpg\"\r\n");
      out.write("				alt=\"배너 이미지\" />\r\n");
      out.write("			</a>\r\n");
      out.write("			<div class=\"banner-controls\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				<button id=\"banner-prev-btn\">&#9664;</button>\r\n");
      out.write("				<button id=\"banner-toggle-btn\">⏸</button>\r\n");
      out.write("				<button id=\"banner-next-btn\">&#9654;</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"section-title\">\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			<a href=\"#\" data-banner=\"weekly\" id=\"btn-weekly\">이 주의 책</a> <a\r\n");
      out.write("				href=\"#\" data-banner=\"new\" id=\"btn-new\">신간 소개</a> <a href=\"#\"\r\n");
      out.write("				data-banner=\"featured\" id=\"btn-featured\">눈에 띄는 새책</a> <a href=\"#\"\r\n");
      out.write("				data-banner=\"hot\" id=\"btn-hot\">화제의 책</a> <a href=\"#\"\r\n");
      out.write("				data-banner=\"exclusive\" id=\"btn-exclusive\">단독 에디션</a>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"main_list\">\r\n");
      out.write("			<h2>\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				<button id=\"main-list-title\" data-tag=\"cool\"\r\n");
      out.write("					style=\"background: none; border: none; font-size: 24px; font-weight: bold; cursor: pointer;\">돌고\r\n");
      out.write("					돌아 다시 여름</button>\r\n");
      out.write("			</h2>\r\n");
      out.write("			<div class=\"tag-list\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				<button class=\"tag-button\" data-tag=\"cool\">서늘한 여름</button>\r\n");
      out.write("				<button class=\"tag-button\" data-tag=\"tearful\">눈물의 여름</button>\r\n");
      out.write("				<button class=\"tag-button\" data-tag=\"moment\">여름의 순간들</button>\r\n");
      out.write("				<button class=\"tag-button\" data-tag=\"new\">상반기 베스트 셀러</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				<button id=\"carousel-prev-btn\" color=\"#446b3c\">&#9664;</button>\r\n");
      out.write("				<button id=\"carousel-next-btn\" color=\"#446b3c\">&#9654;</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"book-list-container\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<button id=\"scrollToTopBtn\">\r\n");
      out.write("		<img src=\"img/up1.png\" alt=\"위로 가기 버튼\" />\r\n");
      out.write("	</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>WITHUS</title>\r\n");
      out.write("    ");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<style>\n");
      out.write("  /* 기본 스타일 (기존 유지) */\n");
      out.write("body {\n");
      out.write("    font-family: 'Arial', sans-serif;\n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("    background-color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: space-between;\n");
      out.write("    align-items: center;\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo img {\n");
      out.write("    width: 200px;\n");
      out.write("    height: auto;\n");
      out.write("    margin-left: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo a img {\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".search-form { /* CSS 클래스 이름 수정 */\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  gap: 10px;\n");
      out.write("  margin: 10px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-box {\n");
      out.write("  padding: 10px;\n");
      out.write("  width: 400px;\n");
      out.write("  font-size: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-btn {\n");
      out.write("  padding: 10px 16px;\n");
      out.write("  background-color: #446b3c;\n");
      out.write("  color: white;\n");
      out.write("  border: none;\n");
      out.write("  font-size: 16px;\n");
      out.write("  border-radius: 4px;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("#search-btn:hover {\n");
      out.write("    background-color: #cce0b8;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* ======================================================== */\n");
      out.write("/* [수정된 부분 시작] 기존 버튼 스타일을 아래 코드로 대체합니다. */\n");
      out.write("/* ======================================================== */\n");
      out.write("\n");
      out.write("/* 회원가입, 로그인 등 기본 버튼 스타일 */\n");
      out.write("#user-buttons button {\n");
      out.write("    display: inline-block;\n");
      out.write("    width: 110px;\n");
      out.write("    height: 42px;\n");
      out.write("    line-height: 42px;\n");
      out.write("    text-align: center;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    \n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border: 1px solid #c0dab0;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("    font-weight: bold;\n");
      out.write("    font-size: 14px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    transition: background-color 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 마이페이지, 로그아웃 링크를 버튼처럼 보이게 하는 스타일 */\n");
      out.write(".header-action-btn {\n");
      out.write("    display: inline-block;\n");
      out.write("    width: 110px;\n");
      out.write("    height: 42px;\n");
      out.write("    line-height: 42px;\n");
      out.write("    text-align: center;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    \n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border: 1px solid #c0dab0;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    \n");
      out.write("    font-weight: bold;\n");
      out.write("    font-size: 14px;\n");
      out.write("    text-decoration: none; /* a 태그 밑줄 제거 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    transition: background-color 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 모든 버튼에 동일한 hover 효과 적용 */\n");
      out.write("#user-buttons button:hover,\n");
      out.write(".header-action-btn:hover {\n");
      out.write("    background-color: #d0e6c5;\n");
      out.write("    border-color: #a9c7a7;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 환영 메시지 텍스트 세로 정렬 */\n");
      out.write(".welcome-message {\n");
      out.write("    vertical-align: middle;\n");
      out.write("    margin-right: 10px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #446b3c;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* ======================================================== */\n");
      out.write("/* [수정된 부분 끝]                                        */\n");
      out.write("/* ======================================================== */\n");
      out.write("\n");
      out.write("nav {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 15px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 40px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#user-buttons {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center; /* 버튼과 텍스트 세로 정렬을 위해 추가 */\n");
      out.write("    gap: 10px;\n");
      out.write("    margin-right: 150px;\n");
      out.write("} \n");
      out.write(".banner {\n");
      out.write("    position: relative;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 650px;\n");
      out.write("    overflow: hidden;\n");
      out.write("      background-color: transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner img {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 0;\n");
      out.write("    left: 0;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 100%;\n");
      out.write("    object-fit: cover;\n");
      out.write("    object-position: center center;\n");
      out.write("    z-index: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls {\n");
      out.write("    position: absolute;\n");
      out.write("    bottom: 10px;\n");
      out.write("    right: 10px;\n");
      out.write("    z-index: 3;\n");
      out.write("    display: flex;\n");
      out.write("    gap: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button {\n");
      out.write("    background-color: rgba(255, 193, 7, 0.9);\n");
      out.write("    border: none;\n");
      out.write("    padding: 6px 8px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    color: #000;\n");
      out.write("    transition: background-color 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button:hover {\n");
      out.write("    background-color: rgba(255, 160, 0, 0.95);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 34px;\n");
      out.write("    padding: 18px 0;\n");
      out.write("     width: 100%;        /* ✅ 추가 */\n");
      out.write("    margin: 8px 0;      /* ✅ 가운데 정렬 제거 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 20px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main_list {\n");
      out.write("    padding: 20px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" .tag-list {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 12px;\n");
      out.write("    margin: 20px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button {\n");
      out.write("    background-color: #e6f0d7; /* 기본 연그린 */\n");
      out.write("    border: 1px solid transparent;\n");
      out.write("    padding: 8px 16px;\n");
      out.write("    border-radius: 20px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    color: #446b3c; /* 그린 계열 텍스트 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    font-weight: 600;\n");
      out.write("    transition: background-color 0.3s, color 0.3s, border 0.3s;\n");
      out.write("    outline: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:hover {\n");
      out.write("    background-color: #d0e6c5;             /* hover 시 약간 더 진한 그린 */\n");
      out.write("    color: #2e4f25;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button.active {\n");
      out.write("    background-color: #c0dab0;             /* 클릭됐을 때 조금 더 강조 */\n");
      out.write("    border: 1px solid #8cb78a;             /* 테두리도 자연스러운 초록 */\n");
      out.write("    color: #2e4f25;                        /* 글자도 어울리는 진한 그린 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:focus {\n");
      out.write("    outline: none;\n");
      out.write("    box-shadow: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 책 슬라이더 스타일 */\n");
      out.write(".book-carousel {\n");
      out.write("    position: relative;\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto 40px auto;\n");
      out.write("    overflow: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-window {\n");
      out.write("    width: 1000px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-track {\n");
      out.write("    display: flex;\n");
      out.write("    transition: transform 0.5s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 이전/다음 버튼 - 위치 고정, 색상 조정 */\n");
      out.write(".carousel-btn {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 50%;\n");
      out.write("    transform: translateY(-50%);\n");
      out.write("    font-size: 26px;\n");
      out.write("    background-color: #f3f8ef;\n");
      out.write("    border: none;\n");
      out.write("    color: #444;\n");
      out.write("    cursor: pointer;\n");
      out.write("    padding: 8px 12px;\n");
      out.write("    border-radius: 50%;\n");
      out.write("    z-index: 2;\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    justify-content: center;\n");
      out.write("    transition: background-color 0.3s, color 0.3s;\n");
      out.write("    user-select: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn:hover {\n");
      out.write("    background-color: #c8dfb5;\n");
      out.write("    color: #000;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.prev {\n");
      out.write("    left: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.next {\n");
      out.write("    right: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item {\n");
      out.write("    flex: 0 0 25%;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 10px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item img {\n");
      out.write("    width: 180px;\n");
      out.write("    height: 260px;\n");
      out.write("    object-fit: cover;\n");
      out.write("    border-radius: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-info {\n");
      out.write("    margin-top: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-title {\n");
      out.write("    font-size: 14px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    margin-top: 10px;\n");
      out.write("    color: #444;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-author {\n");
      out.write("    font-size: 12px;\n");
      out.write("    color: #666;\n");
      out.write("}\n");
      out.write("\n");
      out.write("footer {\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    color: #333;\n");
      out.write("    padding: 20px 0;\n");
      out.write("    text-align: center;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-top: 1px solid #ccc;\n");
      out.write("    margin-top: 60px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-container {\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a {\n");
      out.write("    color: #333;\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" /* 이전/다음 버튼 스타일 */\n");
      out.write("#carousel-prev-btn, #carousel-next-btn {\n");
      out.write("    font-size: 18px;\n");
      out.write("    padding: 5px 12px;\n");
      out.write("    margin: 10px 5px 20px 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    border: 1px solid #446b3c;\n");
      out.write("    background: white;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border-radius: 4px;\n");
      out.write("}\n");
      out.write("#carousel-prev-btn:hover, #carousel-next-btn:hover {\n");
      out.write("    background-color: #446b3c;\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write("#scrollToTopBtn {\n");
      out.write("  position: fixed;\n");
      out.write("  bottom: 150px;\n");
      out.write("  right: 40px;\n");
      out.write("  width: 66px; /* 이미지와 딱 맞게 약간 키움 */\n");
      out.write("  height: 66px;\n");
      out.write("  background-color: transparent;\n");
      out.write("  border: none;\n");
      out.write("  border-radius: 0;\n");
      out.write("  transform: rotate(45deg);\n");
      out.write("  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* 그림자 더 작고 약하게 */\n");
      out.write("  cursor: pointer;\n");
      out.write("  display: flex;\n");
      out.write("  justify-content: center;\n");
      out.write("  align-items: center;\n");
      out.write("  z-index: 999;\n");
      out.write("  transition: all 0.3s ease;\n");
      out.write("  backdrop-filter: blur(10px);\n");
      out.write("  padding: 0;\n");
      out.write("  margin-top: 0px; /* margin-top 제거 또는 0으로 */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn img {\n");
      out.write("  width: 100%;\n");
      out.write("  height: 100%;\n");
      out.write("  object-fit: contain;\n");
      out.write("  transform: rotate(-45deg);\n");
      out.write("  display: block;\n");
      out.write("  transition: transform 0.3s ease;\n");
      out.write("  position: relative;\n");
      out.write("  top: 0;\n");
      out.write("  left: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn:hover {\n");
      out.write("  transform: rotate(45deg) translateY(2px); /* 움직임도 줄임 */\n");
      out.write("  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2); /* 호버시 그림자도 작게 */\n");
      out.write("}\n");
      out.write("\n");
      out.write("#scrollToTopBtn:hover img {\n");
      out.write("  transform: scale(1.05) rotate(-45deg);\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\r\n");
      out.write("    <link rel=\"icon\" href=\"img/icon2.png\" type=\"image/x-icon\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("    <div class=\"footer-container\">\r\n");
      out.write("        <p>&copy; 2025 WITHUS. All rights reserved.</p>\r\n");
      out.write("        <div class=\"footer-links\">\r\n");
      out.write("            <a href=\"#\">이용약관</a> | \r\n");
      out.write("            <a href=\"#\">개인정보처리방침</a> | \r\n");
      out.write("            <a href=\"#\">고객센터</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("    	console.log(\"contextPath: '");
      out.print(request.getContextPath());
      out.write("'\");\r\n");
      out.write("    	const contextPath = \"");
      out.print(request.getContextPath());
      out.write("\";\r\n");
      out.write("        const mainContentArea = document.getElementById('main-content-area');\r\n");
      out.write("        const searchInput = document.getElementById('search-box');\r\n");
      out.write("        const searchBtn = document.getElementById('search-btn');\r\n");
      out.write("        if (searchBtn) {\r\n");
      out.write("          searchBtn.addEventListener('click', () => {\r\n");
      out.write("            const query = searchInput.value.trim();\r\n");
      out.write("            performSearch(query);\r\n");
      out.write("          });\r\n");
      out.write("        }\r\n");
      out.write("        // --- 검색 기능 (회원님 기존 코드 스타일로 복원) ---\r\n");
      out.write("        async function performSearch(query) {\r\n");
      out.write("            if (!query || !query.trim()) {\r\n");
      out.write("                alert('검색어를 입력해주세요.');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            mainContentArea.innerHTML = '<p class=\"loading-message\">검색 중...</p>';\r\n");
      out.write("\r\n");
      out.write("            try {\r\n");
      out.write("                const encodedQuery = encodeURIComponent(query);\r\n");
      out.write("                const apiUrl = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${contextPath}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/searchBook?query=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${encodedQuery}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'`;\r\n");
      out.write("                \r\n");
      out.write("                const response = await fetch(apiUrl);\r\n");
      out.write("                if (!response.ok) throw new Error(`HTTP error! status: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\r\n");
      out.write("                \r\n");
      out.write("                const data = await response.json();\r\n");
      out.write("                displaySearchResults(data.items);\r\n");
      out.write("            } catch (error) {\r\n");
      out.write("                console.error('Search failed:', error);\r\n");
      out.write("                mainContentArea.innerHTML = '<p class=\"error-message\">검색 중 오류가 발생했습니다.</p>';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // --- 검색 결과 표시 (회원님 기존 코드 스타일로 복원) ---\r\n");
      out.write("        function displaySearchResults(books) {\r\n");
      out.write("            mainContentArea.innerHTML = '';\r\n");
      out.write("            if (!books || books.length === 0) {\r\n");
      out.write("                mainContentArea.innerHTML = '<p class=\"info-message\">검색 결과가 없습니다.</p>';\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            const styleId = 'search-result-styles';\r\n");
      out.write("            if (!document.getElementById(styleId)) {\r\n");
      out.write("                const style = document.createElement('style');\r\n");
      out.write("                style.id = styleId;\r\n");
      out.write("                style.innerHTML = `\r\n");
      out.write("                    .search-results-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); gap: 25px; padding: 20px 50px; }\r\n");
      out.write("                    .book-card { border: 1px solid #ddd; border-radius: 8px; padding: 15px; text-align: center; background-color: #f9f9f9; transition: transform 0.2s; }\r\n");
      out.write("                    .book-card:hover { transform: translateY(-5px); box-shadow: 0 4px 8px rgba(0,0,0,0.1); }\r\n");
      out.write("                    .book-card img { width: 180px; height: 260px; object-fit: cover; border-radius: 4px; }\r\n");
      out.write("                    .book-card h3 { font-size: 1em; margin: 10px 0 5px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }\r\n");
      out.write("                    .book-card p { font-size: 0.8em; color: #666; }\r\n");
      out.write("                `;\r\n");
      out.write("                document.head.appendChild(style);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            const resultsGrid = document.createElement('div');\r\n");
      out.write("            resultsGrid.className = 'search-results-grid';\r\n");
      out.write("\r\n");
      out.write("            books.forEach(book => {\r\n");
      out.write("                const bookCard = document.createElement('div');\r\n");
      out.write("                bookCard.className = 'book-card';\r\n");
      out.write("                const title = book.title.replace(/<b>|<\\/b>/g, '');\r\n");
      out.write("                const author = book.author.replace(/<b>|<\\/b>/g, '');\r\n");
      out.write("                const imageUrl = book.image;\r\n");
      out.write("                console.log(imageUrl)\r\n");
      out.write("\r\n");
      out.write("                let imgHtml = `<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${contextPath}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/icon2.png\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${title}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">`;\r\n");
      out.write("                if (imageUrl) {\r\n");
      out.write("                    const encodedUrl = encodeURIComponent(imageUrl);\r\n");
      out.write("                    const proxySrc = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${contextPath}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/imageProxy?url=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${encodedUrl}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("                    imgHtml = `<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${imageUrl}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${title}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" onerror=\"this.onerror=null; this.src='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/icon2.png';\">`;\r\n");
      out.write("                }\r\n");
      out.write("					\r\n");
      out.write("                const linkedImgHtml = '<a href=\"' + book.link + '\" target=\"_blank\">' + imgHtml + '</a>';\r\n");
      out.write("\r\n");
      out.write("                bookCard.innerHTML = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${linkedImgHtml}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'<h3>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${title}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3><p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'${author}'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>`;\r\n");
      out.write("               \r\n");
      out.write("                resultsGrid.appendChild(bookCard);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            mainContentArea.appendChild(resultsGrid);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // --- 책 목록 캐러셀 기능 (원본 데이터 전체 유지) ---\r\n");
      out.write("       const booksData = {\r\n");
      out.write("		    cool: `\r\n");
      out.write("		      <div class=\"book-carousel\">\r\n");
      out.write("		        <div class=\"carousel-window\">\r\n");
      out.write("		          <div class=\"carousel-track\">\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/love.jpg\" alt=\"칵테일, 러브, 좀비\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">칵테일, 러브, 좀비 (리커버)</p>\r\n");
      out.write("		                <p class=\"book-author\">조예은</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791158791971.jpg\" alt=\"우중괴담\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">우중괴담</p>\r\n");
      out.write("		                <p class=\"book-author\">미쓰다 신조</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791160408331.jpg\" alt=\"트로피컬 나이트\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">트로피컬 나이트</p>\r\n");
      out.write("		                <p class=\"book-author\">조예은</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791193190364.jpg\" alt=\"당신의 잘린, 손\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">당신의 잘린, 손</p>\r\n");
      out.write("		                <p class=\"book-author\">배예람, 클레이븐</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791158792183.jpg\" alt=\"세뇌살인\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">세뇌살인</p>\r\n");
      out.write("		                <p class=\"book-author\">혼다 데쓰야</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		          </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		      </div>\r\n");
      out.write("		    `,\r\n");
      out.write("		    tearful: `\r\n");
      out.write("			  <div class=\"book-carousel\">\r\n");
      out.write("			    <div class=\"carousel-window\">\r\n");
      out.write("			      <div class=\"carousel-track\">\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9791196674380.jpg\" alt=\"오지 않는 버스를 기다리는 아이\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">오지 않는 버스를 기다리는 아이</p>\r\n");
      out.write("			            <p class=\"book-author\">토마스 S. 스프래들리 , 제임스 P. 스프래들리</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9791191043754.jpg\" alt=\"세상의 마지막 기차역(리커버 에디션)\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">세상의 마지막 기차역(리커버 에디션)</p>\r\n");
      out.write("			            <p class=\"book-author\">무라세 다케시</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9791167901484.jpg\" alt=\"나미야 잡화점의 기적\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">나미야 잡화점의 기적</p>\r\n");
      out.write("			            <p class=\"book-author\">히가시노 게이고</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9791197377143.jpg\" alt=\"어서 오세요, 휴남동 서점입니다\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">어서 오세요, 휴남동 서점입니다</p>\r\n");
      out.write("			            <p class=\"book-author\">황보름</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			      </div>\r\n");
      out.write("			    </div>\r\n");
      out.write("			  </div>\r\n");
      out.write("		    `,\r\n");
      out.write("		    moment: `\r\n");
      out.write("		      <div class=\"book-carousel\">\r\n");
      out.write("		        <div class=\"carousel-window\">\r\n");
      out.write("		          <div class=\"carousel-track\">\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791194324799.jpg\" alt=\"여름어 사전\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">여름어 사전</p>\r\n");
      out.write("		                <p class=\"book-author\">아침달 편집부</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791130667607.jpg\" alt=\"주게무의 여름\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">주게무의 여름</p>\r\n");
      out.write("		                <p class=\"book-author\">모가미 잇페이</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/9791194192329.jpg\" alt=\" 스웨덴에서 보낸 여름\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">스웨덴에서 보낸 여름</p>\r\n");
      out.write("		                <p class=\"book-author\">김승래</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/photo8.jpeg\" alt=\"첫 여름, 완주\" />\r\n");
      out.write("		              <div class=\"book-info\">\r\n");
      out.write("		                <p class=\"book-title\">첫 여름, 완주</p>\r\n");
      out.write("		                <p class=\"book-author\">김금희</p>\r\n");
      out.write("		              </div>\r\n");
      out.write("		            </div>\r\n");
      out.write("		            <div class=\"book-item\">\r\n");
      out.write("		              <img src=\"img/photo3.jpeg\" alt=\"고래눈이 내리다\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">고래눈이 내리다</p>\r\n");
      out.write("			            <p class=\"book-author\">김보영</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("		          </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		      </div>\r\n");
      out.write("		    `,\r\n");
      out.write("		    new: `\r\n");
      out.write("		      <div class=\"book-carousel\">\r\n");
      out.write("		        <div class=\"carousel-window\">\r\n");
      out.write("		          <div class=\"carousel-track\">\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/Unknown.jpeg\" alt=\"소년이 온다\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">소년이 온다</p>\r\n");
      out.write("			            <p class=\"book-author\">한강</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9788901294742.jpg\" alt=\"청춘의 독서\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">청춘의 독서</p>\r\n");
      out.write("			            <p class=\"book-author\">유시민</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9788932043562.jpg\" alt=\"빛과 실\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">빛과 실</p>\r\n");
      out.write("			            <p class=\"book-author\">한강</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("			        <div class=\"book-item\">\r\n");
      out.write("			          <img src=\"img/9788998441012.jpg\" alt=\"모순\" />\r\n");
      out.write("			          <div class=\"book-info\">\r\n");
      out.write("			            <p class=\"book-title\">모순</p>\r\n");
      out.write("			            <p class=\"book-author\">양귀자</p>\r\n");
      out.write("			          </div>\r\n");
      out.write("			        </div>\r\n");
      out.write("		          </div>\r\n");
      out.write("		        </div>\r\n");
      out.write("		      </div>\r\n");
      out.write("		    `\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("        const tags = ['cool', 'tearful', 'moment', 'new'];\r\n");
      out.write("        let currentTagIndex = 0;\r\n");
      out.write("        const bookListContainer = document.getElementById('book-list-container');\r\n");
      out.write("        const tagButtons = document.querySelectorAll('.tag-button');\r\n");
      out.write("\r\n");
      out.write("        function getTagLabel(tag) {\r\n");
      out.write("            const button = document.querySelector(`.tag-button[data-tag=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tag}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]`);\r\n");
      out.write("            return button ? button.textContent.trim() : '';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function updateActiveTagButton() {\r\n");
      out.write("            tagButtons.forEach(btn => {\r\n");
      out.write("                btn.classList.toggle('active', btn.dataset.tag === tags[currentTagIndex]);\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function showBooks(tag) {\r\n");
      out.write("            bookListContainer.innerHTML = booksData[tag] || '<p>해당 카테고리의 책이 없습니다.</p>';\r\n");
      out.write("            currentTagIndex = tags.indexOf(tag);\r\n");
      out.write("            updateActiveTagButton();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // --- 배너 기능 ---\r\n");
      out.write("        const bannerImage = document.getElementById('banner-image');\r\n");
      out.write("        const bannerLink = document.getElementById('banner-link');\r\n");
      out.write("        const pauseBtn = document.getElementById('banner-toggle-btn');\r\n");
      out.write("        const bannerData = {\r\n");
      out.write("            weekly: { img: \"img/b1.jpg\", link: \"https://product.kyobobook.co.kr/detail/S000215578377\" },\r\n");
      out.write("            new: { img: \"img/honmono_reco.jpg\", link: \"https://product.kyobobook.co.kr/detail/S000216111714\" },\r\n");
      out.write("            featured: { img: \"img/b3.jpg\", link: \"https://product.kyobobook.co.kr/detail/S000216842334\" },\r\n");
      out.write("            hot: { img: \"img/b4.jpg\", link: \"https://product.kyobobook.co.kr/detail/S000000781065\" },\r\n");
      out.write("            exclusive: { img: \"img/event.png\", link: \"#\" }\r\n");
      out.write("        };\r\n");
      out.write("        const bannerKeys = Object.keys(bannerData);\r\n");
      out.write("        let currentBannerIndex = 0;\r\n");
      out.write("        let bannerInterval = null;\r\n");
      out.write("\r\n");
      out.write("        function showBanner(index) {\r\n");
      out.write("            const key = bannerKeys[index];\r\n");
      out.write("            bannerImage.src = bannerData[key].img;\r\n");
      out.write("            bannerLink.href = bannerData[key].link;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function nextBanner() {\r\n");
      out.write("            currentBannerIndex = (currentBannerIndex + 1) % bannerKeys.length;\r\n");
      out.write("            showBanner(currentBannerIndex);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function prevBanner() {\r\n");
      out.write("            currentBannerIndex = (currentBannerIndex - 1 + bannerKeys.length) % bannerKeys.length;\r\n");
      out.write("            showBanner(currentBannerIndex);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function toggleSlide() {\r\n");
      out.write("            if (bannerInterval) {\r\n");
      out.write("                clearInterval(bannerInterval);\r\n");
      out.write("                bannerInterval = null;\r\n");
      out.write("                pauseBtn.textContent = \"▶\";\r\n");
      out.write("            } else {\r\n");
      out.write("                startAutoSlide();\r\n");
      out.write("                pauseBtn.textContent = \"⏸\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function startAutoSlide() {\r\n");
      out.write("            if (bannerInterval) clearInterval(bannerInterval);\r\n");
      out.write("            bannerInterval = setInterval(nextBanner, 3000);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function changeBanner(key) {\r\n");
      out.write("            const index = bannerKeys.indexOf(key);\r\n");
      out.write("            if (index !== -1) {\r\n");
      out.write("                currentBannerIndex = index;\r\n");
      out.write("                showBanner(currentBannerIndex);\r\n");
      out.write("                if (bannerInterval) {\r\n");
      out.write("                    clearInterval(bannerInterval);\r\n");
      out.write("                    bannerInterval = null;\r\n");
      out.write("                    pauseBtn.textContent = \"▶\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        // --- 이벤트 리스너 바인딩 ---\r\n");
      out.write("		// [수정된 부분] 로그아웃 버튼 리스너를 다른 버튼 리스너들과 함께 배치\r\n");
      out.write("	    const logoutBtn = document.getElementById('logout-btn');\r\n");
      out.write("	    if (logoutBtn) {\r\n");
      out.write("	        logoutBtn.addEventListener('click', async (event) => {\r\n");
      out.write("	            event.preventDefault();\r\n");
      out.write("	            if (confirm('로그아웃 하시겠습니까?')) {\r\n");
      out.write("	                try {\r\n");
      out.write("	                    // 여기의 contextPath는 이 스크립트 상단에 선언된 변수를 사용합니다.\r\n");
      out.write("	                    const response = await fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/doLogout`, {\r\n");
      out.write("	                        cache: 'no-store'\r\n");
      out.write("	                    });\r\n");
      out.write("\r\n");
      out.write("	                    if (!response.ok) {\r\n");
      out.write("	                        throw new Error(`서버 응답 오류: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\r\n");
      out.write("	                    }\r\n");
      out.write("\r\n");
      out.write("	                    const result = await response.json();\r\n");
      out.write("	                    if (result.status === 'success') {\r\n");
      out.write("	                        alert(result.message);\r\n");
      out.write("	                        window.location.reload();\r\n");
      out.write("	                    } else {\r\n");
      out.write("	                        alert(result.message || '로그아웃에 실패했습니다.');\r\n");
      out.write("	                    }\r\n");
      out.write("	                } catch (error) {\r\n");
      out.write("	                    console.error('Logout failed:', error);\r\n");
      out.write("	                    alert('로그아웃 처리 중 문제가 발생했습니다.');\r\n");
      out.write("	                }\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("        \r\n");
      out.write("        const joinBtn = document.getElementById('join-btn');\r\n");
      out.write("        if(joinBtn) joinBtn.addEventListener('click', () => location.href='register.jsp');\r\n");
      out.write("\r\n");
      out.write("        const loginBtn = document.getElementById('login-btn');\r\n");
      out.write("        if(loginBtn) loginBtn.addEventListener('click', () => location.href='login.jsp');\r\n");
      out.write("        \r\n");
      out.write("        const mypageBtn = document.getElementById('mypage-btn');\r\n");
      out.write("        if(mypageBtn) mypageBtn.addEventListener('click', () => location.href='mypage.jsp');\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('banner-prev-btn').addEventListener('click', prevBanner);\r\n");
      out.write("        document.getElementById('banner-next-btn').addEventListener('click', nextBanner);\r\n");
      out.write("        document.getElementById('banner-toggle-btn').addEventListener('click', toggleSlide);\r\n");
      out.write("\r\n");
      out.write("        document.querySelectorAll('.section-title a').forEach(link => {\r\n");
      out.write("            link.addEventListener('click', (e) => {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                changeBanner(e.target.dataset.banner);\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        tagButtons.forEach(button => {\r\n");
      out.write("            button.addEventListener('click', (e) => {\r\n");
      out.write("                showBooks(e.target.dataset.tag);\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('main-list-title').addEventListener('click', (e) => {\r\n");
      out.write("            showBooks(e.target.dataset.tag);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('carousel-prev-btn').addEventListener('click', () => {\r\n");
      out.write("            currentTagIndex = (currentTagIndex - 1 + tags.length) % tags.length;\r\n");
      out.write("            showBooks(tags[currentTagIndex]);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        document.getElementById('carousel-next-btn').addEventListener('click', () => {\r\n");
      out.write("            currentTagIndex = (currentTagIndex + 1) % tags.length;\r\n");
      out.write("            showBooks(tags[currentTagIndex]);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        const scrollToTopBtn = document.getElementById('scrollToTopBtn');\r\n");
      out.write("        window.addEventListener('scroll', () => {\r\n");
      out.write("            scrollToTopBtn.style.display = window.scrollY > 300 ? 'block' : 'none';\r\n");
      out.write("        });\r\n");
      out.write("        scrollToTopBtn.addEventListener('click', () => {\r\n");
      out.write("            window.scrollTo({ top: 0, behavior: 'smooth' });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        // --- 초기화 로직 ---\r\n");
      out.write("        function initializePage() {\r\n");
      out.write("            const urlParams = new URLSearchParams(window.location.search);\r\n");
      out.write("            const queryFromUrl = urlParams.get('query');\r\n");
      out.write("\r\n");
      out.write("            if (queryFromUrl) {\r\n");
      out.write("                searchInput.value = decodeURIComponent(queryFromUrl.replace(/\\+/g, ' '));\r\n");
      out.write("                performSearch(queryFromUrl);\r\n");
      out.write("            } else {\r\n");
      out.write("                // 기본 페이지 로드\r\n");
      out.write("                showBanner(currentBannerIndex);\r\n");
      out.write("                startAutoSlide();\r\n");
      out.write("                showBooks('cool');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        initializePage();\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
