/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2025-07-03 08:38:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class celebDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1751247240298L));
    _jspx_dependants.put("/css/main_css.jsp", Long.valueOf(1751433626232L));
    _jspx_dependants.put("jar:file:/C:/2025_teamproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/2025_teamproject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    request.setAttribute("celebName", "박찬욱");
    request.setAttribute("celebDescription", "영화감독 박찬욱의 인생 책들");
    request.setAttribute("thumbnail", request.getContextPath() + "/img/박찬욱.jpg");

    List<Map<String, String>> blocks = new ArrayList<>();

    Map<String, String> block1 = new HashMap<>();
    block1.put("type", "text");
    block1.put("value", "독서는 내 영화의 자양분이며, 문학은 영화를 만드는 힘의 원천이다.");
    blocks.add(block1);

    Map<String, String> block2 = new HashMap<>();
    block2.put("type", "image");
    block2.put("value", "/img/오너러블스쿨보이.png");
    blocks.add(block2);

    Map<String, String> block3 = new HashMap<>();
    block3.put("type", "book");
    block3.put("title", "오너러블 스쿨보이");
    block3.put("author", "존 르카레");
    block3.put("publisher", "열린책들");
    block3.put("pubDate", "2022.07.20");
    block3.put("image", "/img/오너러블 스쿨보이.jpg");
    block3.put("link", "https://product.kyobobook.co.kr/detail/S000061448966");
    block3.put("desc", "사상 최고 첩보 시리즈 카를라 3부작의 두 번째 작품 출간");
    blocks.add(block3);
    
    Map<String, String> block4 = new HashMap<>();
    block4.put("type", "image");
    block4.put("value", "/img/이민자들.png");
    blocks.add(block4);

    Map<String, String> block5 = new HashMap<>();
    block5.put("type", "book");
    block5.put("title", "이민자들");
    block5.put("author", "W. G. 제발트");
    block5.put("publisher", "창비");
    block5.put("pubDate", "2018.03.22");
    block5.put("image", "/img/이민자들.jpg");
    block5.put("link", "https://product.kyobobook.co.kr/detail/S000000612803");
    block5.put("desc", "제발트 탄생 75주년 기념 개정판 출간");
    blocks.add(block5);
    
    Map<String, String> block6 = new HashMap<>();
    block6.put("type", "image");
    block6.put("value", "/img/괴물들.png");
    blocks.add(block6);

    Map<String, String> block7 = new HashMap<>();
    block7.put("type", "book");
    block7.put("title", "괴물들");
    block7.put("author", "클레어 데더러");
    block7.put("publisher", "을유문화사");
    block7.put("pubDate", "2024.09.30");
    block7.put("image", "/img/괴물들.jpg");
    block7.put("link", "https://product.kyobobook.co.kr/detail/S000214356477");
    block7.put("desc", "위대한 걸작을 탄생시킨 괴물 예술가를 어떻게 마주할 것인가?");
    blocks.add(block7);
    
    Map<String, String> block8 = new HashMap<>();
    block8.put("type", "image");
    block8.put("value", "/img/브라이턴록.png");
    blocks.add(block8);

    Map<String, String> block9 = new HashMap<>();
    block9.put("type", "book");
    block9.put("title", "브라이턴 록");
    block9.put("author", "그레이엄 그린");
    block9.put("publisher", "현대문학");
    block9.put("pubDate", "2021.04.23");
    block9.put("image", "/img/브라이턴 록.jpg");
    block9.put("link", "https://product.kyobobook.co.kr/detail/S000001945339");
    block9.put("desc", "악의 본성을 탐구한 걸작 미스터리");
    blocks.add(block9);
    
    Map<String, String> block10 = new HashMap<>();
    block10.put("type", "image");
    block10.put("value", "/img/지속의순간들.png");
    blocks.add(block10);

    Map<String, String> block11 = new HashMap<>();
    block11.put("type", "book");
    block11.put("title", "지속의 순간들");
    block11.put("author", "제프 다이어");
    block11.put("publisher", "을유문화사");
    block11.put("pubDate", "2022.03.05");
    block11.put("image", "/img/지속의 순간들.jpg");
    block11.put("link", "https://product.kyobobook.co.kr/detail/S000000576590");
    block11.put("desc", "사진을 찍지 않는 사진 비평가만의 새롭고 독특한 시선");
    blocks.add(block11);
    
    Map<String, String> block12 = new HashMap<>();
    block12.put("type", "image");
    block12.put("value", "/img/관촌수필.png");
    blocks.add(block12);

    Map<String, String> block13 = new HashMap<>();
    block13.put("type", "book");
    block13.put("title", "관촌수필");
    block13.put("author", "이문구");
    block13.put("publisher", "문학과지성사");
    block13.put("pubDate", "2018.09.03");
    block13.put("image", "/img/관촌수필.jpg");
    block13.put("link", "https://product.kyobobook.co.kr/detail/S000000570374");
    block13.put("desc", "우리 문학 토양을 단단하고 풍요롭게 다져온 작품을 만나다.");
    blocks.add(block13);
    
    Map<String, String> block14 = new HashMap<>();
    block14.put("type", "image");
    block14.put("value", "/img/정확한 사랑의 실험.png");
    blocks.add(block14);

    Map<String, String> block15 = new HashMap<>();
    block15.put("type", "book");
    block15.put("title", "정확한 사랑의 실험");
    block15.put("author", "신형철");
    block15.put("publisher", "마음산책");
    block15.put("pubDate", "2014.10.01");
    block15.put("image", "/img/정확한 사랑의 실험.jpg");
    block15.put("link", "https://product.kyobobook.co.kr/detail/S000000938887");
    block15.put("desc", "이야기 속에 숨어 있는 인간의 비밀을 ‘정확한 문장’으로 말한다!");
    blocks.add(block15);
    
    Map<String, String> block16 = new HashMap<>();
    block16.put("type", "image");
    block16.put("value", "/img/창백한 언덕 풍경.png");
    blocks.add(block16);

    Map<String, String> block17 = new HashMap<>();
    block17.put("type", "book");
    block17.put("title", "창백한 언덕 풍경");
    block17.put("author", "가즈오 이시구로");
    block17.put("publisher", "민음사");
    block17.put("pubDate", "2012.11.30");
    block17.put("image", "/img/창백한 언덕 풍경.jpg");
    block17.put("link", "https://product.kyobobook.co.kr/detail/S000000621324");
    block17.put("desc", "흐릿한 기억 속에서 재생되는 과거의 상처!");
    blocks.add(block17);

    request.setAttribute("contentBlocks", blocks);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>셀럽 추천 상세</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/celebList.css\" />\r\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<style>\n");
      out.write("  /* 기본 스타일 (기존 유지) */\n");
      out.write("body {\n");
      out.write("    font-family: 'Arial', sans-serif;\n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("    background-color: #fff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: space-between;\n");
      out.write("    align-items: center;\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    padding: 0px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo img {\n");
      out.write("    width: 200px;\n");
      out.write("    height: auto;\n");
      out.write("    margin-left: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logo a img {\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-box {\n");
      out.write("    padding: 12px;\n");
      out.write("    width: 500px;\n");
      out.write("    border: 1px solid #ccc;\n");
      out.write("    position: absolute;\n");
      out.write("    left: 50%;\n");
      out.write("    transform: translateX(-50%);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".search-group {\n");
      out.write("    position: absolute;\n");
      out.write("    left: 50%;\n");
      out.write("    transform: translateX(-50%);\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-btn {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    border: none;\n");
      out.write("    padding: 10px 16px;\n");
      out.write("    margin-left: 8px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    cursor: pointer;\n");
      out.write("    border-radius: 4px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#search-btn:hover {\n");
      out.write("    background-color: #cce0b8;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#logout-btn,\n");
      out.write("#user-buttons button {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    border: none;\n");
      out.write("    padding: 10px 16px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    width: 90px;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 15px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 40px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("nav a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#user-buttons {\n");
      out.write("    display: flex;\n");
      out.write("    gap: 10px;\n");
      out.write("    margin-right: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner {\n");
      out.write("    position: relative;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 650px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    background-color: #ffe04d;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner img {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 0;\n");
      out.write("    left: 0;\n");
      out.write("    width: 100%;\n");
      out.write("    height: 100%;\n");
      out.write("    object-fit: cover;\n");
      out.write("    object-position: center center;\n");
      out.write("    opacity: 0.8;\n");
      out.write("    z-index: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls {\n");
      out.write("    position: absolute;\n");
      out.write("    bottom: 10px;\n");
      out.write("    right: 10px;\n");
      out.write("    z-index: 3;\n");
      out.write("    display: flex;\n");
      out.write("    gap: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button {\n");
      out.write("    background-color: rgba(255, 193, 7, 0.9);\n");
      out.write("    border: none;\n");
      out.write("    padding: 6px 8px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    color: #000;\n");
      out.write("    transition: background-color 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".banner-controls button:hover {\n");
      out.write("    background-color: rgba(255, 160, 0, 0.95);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title {\n");
      out.write("    background-color: #e6f0d7;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 34px;\n");
      out.write("    padding: 18px 0;\n");
      out.write("     width: 100%;        /* ✅ 추가 */\n");
      out.write("    margin: 8px 0;      /* ✅ 가운데 정렬 제거 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a {\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 20px;\n");
      out.write("    color: #000;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".section-title a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".main_list {\n");
      out.write("    padding: 20px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-list {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("    gap: 12px;\n");
      out.write("    margin: 20px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button {\n");
      out.write("    background-color: #e6f0d7; /* 기본 연그린 */\n");
      out.write("    border: 1px solid transparent;\n");
      out.write("    padding: 8px 16px;\n");
      out.write("    border-radius: 20px;\n");
      out.write("    font-size: 14px;\n");
      out.write("    color: #446b3c; /* 그린 계열 텍스트 */\n");
      out.write("    cursor: pointer;\n");
      out.write("    font-weight: 600;\n");
      out.write("    transition: background-color 0.3s, color 0.3s, border 0.3s;\n");
      out.write("    outline: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:hover {\n");
      out.write("    background-color: #d0e6c5;             /* hover 시 약간 더 진한 그린 */\n");
      out.write("    color: #2e4f25;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button.active {\n");
      out.write("    background-color: #c0dab0;             /* 클릭됐을 때 조금 더 강조 */\n");
      out.write("    border: 1px solid #8cb78a;             /* 테두리도 자연스러운 초록 */\n");
      out.write("    color: #2e4f25;                        /* 글자도 어울리는 진한 그린 */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-button:focus {\n");
      out.write("    outline: none;\n");
      out.write("    box-shadow: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 책 슬라이더 스타일 */\n");
      out.write(".book-carousel {\n");
      out.write("    position: relative;\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto 40px auto;\n");
      out.write("    overflow: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-window {\n");
      out.write("    width: 1000px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-track {\n");
      out.write("    display: flex;\n");
      out.write("    transition: transform 0.5s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 이전/다음 버튼 - 위치 고정, 색상 조정 */\n");
      out.write(".carousel-btn {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 50%;\n");
      out.write("    transform: translateY(-50%);\n");
      out.write("    font-size: 26px;\n");
      out.write("    background-color: #f3f8ef;\n");
      out.write("    border: none;\n");
      out.write("    color: #444;\n");
      out.write("    cursor: pointer;\n");
      out.write("    padding: 8px 12px;\n");
      out.write("    border-radius: 50%;\n");
      out.write("    z-index: 2;\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    justify-content: center;\n");
      out.write("    transition: background-color 0.3s, color 0.3s;\n");
      out.write("    user-select: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn:hover {\n");
      out.write("    background-color: #c8dfb5;\n");
      out.write("    color: #000;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.prev {\n");
      out.write("    left: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".carousel-btn.next {\n");
      out.write("    right: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item {\n");
      out.write("    flex: 0 0 25%;\n");
      out.write("    text-align: center;\n");
      out.write("    padding: 10px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-item img {\n");
      out.write("    width: 180px;\n");
      out.write("    height: 260px;\n");
      out.write("    object-fit: cover;\n");
      out.write("    border-radius: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-info {\n");
      out.write("    margin-top: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-title {\n");
      out.write("    font-size: 14px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    margin-top: 10px;\n");
      out.write("    color: #444;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".book-author {\n");
      out.write("    font-size: 12px;\n");
      out.write("    color: #666;\n");
      out.write("}\n");
      out.write("\n");
      out.write("footer {\n");
      out.write("    background-color: #eff7e8;\n");
      out.write("    color: #333;\n");
      out.write("    padding: 20px 0;\n");
      out.write("    text-align: center;\n");
      out.write("    font-size: 14px;\n");
      out.write("    border-top: 1px solid #ccc;\n");
      out.write("    margin-top: 60px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-container {\n");
      out.write("    max-width: 1000px;\n");
      out.write("    margin: 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a {\n");
      out.write("    color: #333;\n");
      out.write("    text-decoration: none;\n");
      out.write("    margin: 0 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".footer-links a:hover {\n");
      out.write("    text-decoration: underline;\n");
      out.write("}\n");
      out.write("\n");
      out.write(" /* 이전/다음 버튼 스타일 */\n");
      out.write("#carousel-prev-btn, #carousel-next-btn {\n");
      out.write("    font-size: 18px;\n");
      out.write("    padding: 5px 12px;\n");
      out.write("    margin: 10px 5px 20px 5px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    border: 1px solid #446b3c;\n");
      out.write("    background: white;\n");
      out.write("    color: #446b3c;\n");
      out.write("    border-radius: 4px;\n");
      out.write("}\n");
      out.write("#carousel-prev-btn:hover, #carousel-next-btn:hover {\n");
      out.write("    background-color: #446b3c;\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\r\n");
      out.write("<link rel=\"icon\" href=\"img/icon2.png\" type=\"image/x-icon\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	font-family: 'Arial', sans-serif;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	max-width: 1000px;\r\n");
      out.write("	margin: 30px auto;\r\n");
      out.write("	padding: 0 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("	font-size: 2rem;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".desc {\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	color: #666;\r\n");
      out.write("	margin-bottom: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thumbnail-container {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin: 30px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thumbnail-container img {\r\n");
      out.write("	width: 600px;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content-blocks {\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text-block {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	max-width: 600px;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	padding: 18px;\r\n");
      out.write("	margin: 40px auto;  /* ← 여기! auto를 추가해야 가운데 정렬됨 */\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	line-height: 1.6;\r\n");
      out.write("	box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".img-block {\r\n");
      out.write("	text-align: center; /* 블록 안에서 가운데 정렬 */\r\n");
      out.write("	margin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".img-block img {\r\n");
      out.write("	max-width: 600px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	border-radius: 6px;\r\n");
      out.write("	box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-card {\r\n");
      out.write("	max-width: 500px;\r\n");
      out.write("	margin: 30px auto; /* ← 가운데 정렬을 위해 auto 추가! */\r\n");
      out.write("	display: flex;\r\n");
      out.write("	gap: 20px;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	border: 1px solid #ddd;\r\n");
      out.write("	padding: 16px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: box-shadow 0.2s ease;\r\n");
      out.write("	background-color: #fafafa;\r\n");
      out.write("	box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-card:hover {\r\n");
      out.write("	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-card img {\r\n");
      out.write("	width: 90px;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	border-radius: 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-info {\r\n");
      out.write("	flex-grow: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-title {\r\n");
      out.write("	font-size: 1.2rem;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin-bottom: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-meta {\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("	color: #555;\r\n");
      out.write("	margin: 2px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".book-desc {\r\n");
      out.write("	margin-top: 8px;\r\n");
      out.write("	font-size: 0.95rem;\r\n");
      out.write("	color: #333;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<div id=\"logo\">\r\n");
      out.write("			<a href=\"main.jsp\"> <img src=\"img/logo.png\" alt=\"로고\">\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"search-group\">\r\n");
      out.write("			<input type=\"text\" id=\"search-box\" placeholder=\"검색어를 입력하세요...\" />\r\n");
      out.write("			<button id=\"search-btn\">검색</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"user-buttons\">\r\n");
      out.write("			<button id=\"join-btn\" onclick=\"location.href='join.jsp'\">회원가입</button>\r\n");
      out.write("			<button id=\"login-btn\" onclick=\"location.href='Login.jsp'\">로그인</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<nav>\r\n");
      out.write("		<a href=\"#\">(AI) 책 추천</a> <a\r\n");
      out.write("			href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reviewList\">리뷰</a> <a\r\n");
      out.write("			href=\"#\">플레이리스트</a> <a\r\n");
      out.write("			href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/celebList\">셀럽추천</a> <a\r\n");
      out.write("			href=\"#\">마이페이지</a>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celebName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\r\n");
      out.write("		<p class=\"desc\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celebDescription}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"thumbnail-container\">\r\n");
      out.write("			<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${thumbnail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"셀럽 썸네일\">\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"content-blocks\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<footer>\r\n");
      out.write("		<div class=\"footer-container\">\r\n");
      out.write("			<p>&copy; 2025 WITHUS. All rights reserved.</p>\r\n");
      out.write("			<div class=\"footer-links\">\r\n");
      out.write("				<a href=\"#\">이용약관</a> | <a href=\"#\">개인정보처리방침</a> | <a href=\"#\">고객센터</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /celebDetail.jsp(310,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("block");
      // /celebDetail.jsp(310,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/celebDetail.jsp(310,3) '${contentBlocks}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${contentBlocks}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				");
            if (_jspx_meth_c_005fchoose_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /celebDetail.jsp(312,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.type == 'text'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<div class=\"text-block\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /celebDetail.jsp(315,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.type == 'image'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<div class=\"img-block\">\r\n");
          out.write("							<img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("								alt=\"내용 이미지\" />\r\n");
          out.write("						</div>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /celebDetail.jsp(321,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.type == 'book'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<div class=\"book-card\"\r\n");
          out.write("							onclick=\"window.open('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.link}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("', '_blank')\">\r\n");
          out.write("							<img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.image}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("								alt=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" />\r\n");
          out.write("							<div class=\"book-info\">\r\n");
          out.write("								<div class=\"book-title\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("								<p class=\"book-meta\">저자: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.author}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("								<p class=\"book-meta\">출판: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.publisher}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("								<p class=\"book-meta\">발매: ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.pubDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("								<p class=\"book-desc\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.desc}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</p>\r\n");
          out.write("							</div>\r\n");
          out.write("						</div>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }
}
