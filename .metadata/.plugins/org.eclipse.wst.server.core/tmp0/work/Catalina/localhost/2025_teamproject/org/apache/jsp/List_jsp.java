/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2025-07-01 03:25:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class List_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1751247240298L));
    _jspx_dependants.put("jar:file:/C:/2025_teamproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/2025_teamproject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" />\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	font-family: 'Arial', sans-serif;\r\n");
      out.write("	margin: 0; \r\n");
      out.write("	padding : 0;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	background-color: #eff7e8;\r\n");
      out.write("	padding: 2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#logo img {\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#search-box {\r\n");
      out.write("	padding: 8px;\r\n");
      out.write("	width: 400px;\r\n");
      out.write("	border: 1px solid #ccc;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	transform: translateX(-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#logout-btn {\r\n");
      out.write("	background-color: #e6f0d7;\r\n");
      out.write("	border: none;\r\n");
      out.write("	padding: 10px 16px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	width: 90px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav {\r\n");
      out.write("	background-color: #e6f0d7;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 15px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	margin: 0 40px;\r\n");
      out.write("	color: #000;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a:hover {\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	max-width: 1200px;\r\n");
      out.write("	margin: 30px auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".grid {\r\n");
      out.write("	display: grid;\r\n");
      out.write("	grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n");
      out.write("	gap: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);\r\n");
      out.write("	transition: transform 0.2s ease;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: #000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card:hover {\r\n");
      out.write("	transform: translateY(-2px);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card img {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 260px;\r\n");
      out.write("	object-fit: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-content {\r\n");
      out.write("	padding: 12px 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-title {\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card-desc {\r\n");
      out.write("	font-size: 0.875rem;\r\n");
      out.write("	color: #555;\r\n");
      out.write("	line-height: 1.4;\r\n");
      out.write("	height: 2.6em;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	text-overflow: ellipsis;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 북마크 아이콘 */\r\n");
      out.write(".bookmark-icon {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 12px;\r\n");
      out.write("	right: 12px;\r\n");
      out.write("	font-size: 1.2rem;\r\n");
      out.write("	color: #999;\r\n");
      out.write("	background-color: rgba(255, 255, 255, 0.85);\r\n");
      out.write("	padding: 6px;\r\n");
      out.write("	border-radius: 50%;\r\n");
      out.write("	transition: color 0.2s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bookmark-icon:hover {\r\n");
      out.write("	color: #f39c12; /* 노란색 강조 */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>셀럽 추천 리스트</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<div id=\"logo\">\r\n");
      out.write("			<img src=\"img/로고.png\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<input type=\"text\" id=\"search-box\" placeholder=\"검색어를 입력하세요...\" />\r\n");
      out.write("		<button id=\"logout-btn\" onclick=\"location.href='Logout.jsp'\">로그아웃</button>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<nav>\r\n");
      out.write("		<a href=\"#\">(AI) 책 추천</a> <a href=\"#\">리뷰</a> <a href=\"#\">플레이리스트</a> <a\r\n");
      out.write("			href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/celebList\">셀럽추천</a> <a\r\n");
      out.write("			href=\"#\">마이페이지</a>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h2 style=\"margin-bottom: 20px;\">셀럽 추천 책 목록</h2>\r\n");
      out.write("		<div style=\"text-align: right; margin-bottom: 20px;\">\r\n");
      out.write("			<a href=\"writeCelebPost.jsp\"\r\n");
      out.write("				style=\"padding: 10px 16px; background-color: #e6f0d7; color: black; text-decoration: none; border-radius: 8px;\">작성하기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"grid\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /List.jsp(158,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("celeb");
      // /List.jsp(158,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/List.jsp(158,3) '${celebList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${celebList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				<a class=\"card\" href=\"celebBooks?celebId=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celeb.celeb_rec_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("					<!-- 북마크 아이콘 --> <i class=\"fas fa-bookmark bookmark-icon\"></i> <img\r\n");
            out.write("					src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celeb.celeb_image_url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" alt=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celeb.celeb_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" 이미지\" />\r\n");
            out.write("					<div class=\"card-content\">\r\n");
            out.write("						<div class=\"card-title\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celeb.celeb_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div>\r\n");
            out.write("						<div class=\"card-desc\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${celeb.celeb_description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div>\r\n");
            out.write("					</div>\r\n");
            out.write("				</a>\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
